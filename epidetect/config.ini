#########################################
### Configure predictions on new data ###
#########################################


[MAIN]
# prediction method. Can take values: naive, var1_svm, var1_abdt
method = var1_svm
# number of processors used for computation. If negative integer, the (n_available_processors + n_jobs + 1) processors are used
# For example, if n_jobs=-1 all the processors are used
n_jobs= -3
# In case there is a sufficient amount of spikes (around 20% or 100 spikes) already labeled SVM models can be partially fitted on this data
# Labeled spikes should be in corresponding .mrk files, labeled as "focal"
# Note: Refitted model will not be saved
refit_svm = False


[DATA]
# absolute path to the directory with all .sef files in which spikes need to be detected
data_path =
# absolute path to the directory where .mrk files will be saved. If directory does not exist, it will be created
# Cant contain .mrk files with the same names as .sef files in data_path/
save_path =


[ADVANCED]
# Advanced settings were only tested in particular configuration:
# sfreq = 250.
# bp = (2., 35.)
# epoch_hs = 0.1
# overlap = 0.35
# spikes_inclusion = 0.87
# spread_fraction = 1.
# max_dist_1_fraction = 1.
# max_dist_2_fraction = 0.2
# Change at your own risk or when thinking that results of predictions will be improved or out of curiosity.
# Sampling frequency to which the signal will be resamples
# Note that if initial sampling frequency is below `sfreq` Hz, then signal will be up-sampled
sfreq = 250.
# Band pass filter applied in preprocessing stage
bp = (2., 35.)
# Half size of epochs in sec. Signal is divided on fixed length epochs on which classification if made
epoch_hs = 0.1
# Overlap fraction of fixed length epochs. Fixed length epochs are overlapped in order to make to accurate predictions.
# Is a fraction of 2*`epoch_hs`. Should be 0 < overlap <= 1
overlap = 0.35
# Fraction of spikes that should be included in epoch in order for epoch to be labeled as the one containing spike
# will only be used for refit_svm = True
spikes_inclusion = 0.87
# Spread fraction - defines the interval around event corresponding to epoch classified as the one
# containing spike: (event_time - spread, event_time + spread + 1).
# Is a fraction of `epoch_hs`. Should be 0 < spread fraction <= 1
spread_fraction = 1.
# Maximum distance between two events for them to be considered to belong to one spike
# Is a fraction of `epoch_hs`. Should be 0 < max_dist_1_fraction <= 1
max_dist_1_fraction = 1.
# Maximum distance between two events that are supposed to spikes for them to be considered to belong to one spike
# Is a fraction of `epoch_hs`. Should be 0 < max_dist_2_fraction <= 1
max_dist_2_fraction = 0.2